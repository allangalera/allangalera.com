---
import './base.css';
import { SEO, Props as SEOProps } from 'astro-seo';
import { Footer } from '@/components/Footer';
import { Header } from '@/components/Header';

export interface Props {
  seoOptions: SEOProps;
}

const { seoOptions } = Astro.props;

const seoDefaultOptions = {
  title: 'Allan Galera',
  description: 'Allan Galera personal website',
  twitter: {
    creator: '@allangalera',
    site: 'allangalera.com',
  },
} satisfies SEOProps;

const seo = {
  ...seoDefaultOptions,
  ...seoOptions,
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline src="/prism.js"></script>
    <script
      is:inline
      async
      defer
      data-website-id="617dbb1f-da10-4f51-ba05-99d340b0b430"
      src="https://umami-cockroachdb.vercel.app/umami.js"
    ></script>
    <SEO {...seo} />
    <script>
      import { getTheme, setTheme } from '@/utils';
      import { THEME_OPTIONS } from '../constants';

      function initializeColorScheme() {
        const currentTheme = getTheme();

        setTheme(currentTheme);
      }

      initializeColorScheme();

      window
        .matchMedia('(prefers-color-scheme: dark)')
        .addEventListener('change', () => {
          if (getTheme() === THEME_OPTIONS.System) {
            setTheme(THEME_OPTIONS.System);
          }
        });
    </script>
  </head>
  <body
    class="font-sans min-h-[100svh] grid grid-rows-[max-content_1fr_max-content] bg-zinc-50 dark:bg-zinc-900"
  >
    <Header client:load />
    <main class="p-5">
      <slot />
    </main>
    <Footer client:load />
  </body>
</html>
